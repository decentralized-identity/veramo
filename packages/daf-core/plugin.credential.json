{
  "credentialSubject": {
    "interfaces": {
      "IResolver": {
        "components": {
          "schemas": {
            "ResolveDidArgs": {
              "type": "object",
              "properties": {
                "didUrl": {
                  "type": "string",
                  "description": "DID URL"
                }
              },
              "required": [
                "didUrl"
              ],
              "description": "Input arguments for {@link IResolver.resolveDid | resolveDid}"
            },
            "DIDDocument": {
              "type": "object",
              "properties": {
                "@context": {
                  "type": "string",
                  "const": "https://w3id.org/did/v1"
                },
                "id": {
                  "type": "string"
                },
                "publicKey": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicKey"
                  }
                },
                "authentication": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Authentication"
                  }
                },
                "uportProfile": {},
                "service": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceEndpoint"
                  }
                },
                "created": {
                  "type": "string"
                },
                "updated": {
                  "type": "string"
                },
                "proof": {
                  "$ref": "#/components/schemas/LinkedDataProof"
                },
                "keyAgreement": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/PublicKey"
                      }
                    ]
                  }
                }
              },
              "required": [
                "@context",
                "id",
                "publicKey"
              ]
            },
            "PublicKey": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "controller": {
                  "type": "string"
                },
                "ethereumAddress": {
                  "type": "string"
                },
                "publicKeyBase64": {
                  "type": "string"
                },
                "publicKeyBase58": {
                  "type": "string"
                },
                "publicKeyHex": {
                  "type": "string"
                },
                "publicKeyPem": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type",
                "controller"
              ]
            },
            "Authentication": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "publicKey": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "publicKey"
              ]
            },
            "ServiceEndpoint": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "serviceEndpoint": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type",
                "serviceEndpoint"
              ]
            },
            "LinkedDataProof": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "creator": {
                  "type": "string"
                },
                "nonce": {
                  "type": "string"
                },
                "signatureValue": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "created",
                "creator",
                "nonce",
                "signatureValue"
              ]
            }
          },
          "methods": {
            "resolveDid": {
              "description": "Resolves DID and returns DID Document",
              "arguments": {
                "$ref": "#/components/schemas/ResolveDidArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/DIDDocument"
              }
            }
          }
        }
      },
      "IKeyManager": {
        "components": {
          "schemas": {
            "IKeyManagerCreateKeyArgs": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/TKeyType",
                  "description": "Key type"
                },
                "kms": {
                  "type": "string",
                  "description": "Key Management System"
                },
                "meta": {
                  "type": "object",
                  "description": "Optional. Key meta data"
                }
              },
              "required": [
                "type",
                "kms"
              ],
              "description": "Input arguments for {@link IKeyManager.keyManagerCreateKey | keyManagerCreateKey}"
            },
            "TKeyType": {
              "type": "string",
              "enum": [
                "Ed25519",
                "Secp256k1"
              ],
              "description": "Cryptographic key type"
            },
            "IKey": {
              "type": "object",
              "properties": {
                "kid": {
                  "type": "string",
                  "description": "Key ID"
                },
                "kms": {
                  "type": "string",
                  "description": "Key Management System"
                },
                "type": {
                  "$ref": "#/components/schemas/TKeyType",
                  "description": "Key type"
                },
                "publicKeyHex": {
                  "type": "string",
                  "description": "Public key"
                },
                "privateKeyHex": {
                  "type": "string",
                  "description": "Optional. Private key"
                },
                "meta": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Optional. Key metadata. Can be used to store auth data to access remote kms"
                }
              },
              "required": [
                "kid",
                "kms",
                "type",
                "publicKeyHex"
              ],
              "description": "Cryptographic key"
            },
            "IKeyManagerDecryptJWEArgs": {
              "type": "object",
              "properties": {
                "kid": {
                  "type": "string",
                  "description": "Key ID"
                },
                "data": {
                  "type": "string",
                  "description": "Encrypted data"
                }
              },
              "required": [
                "kid",
                "data"
              ],
              "description": "Input arguments for {@link IKeyManager.keyManagerDecryptJWE | keyManagerDecryptJWE}"
            },
            "IKeyManagerDeleteKeyArgs": {
              "type": "object",
              "properties": {
                "kid": {
                  "type": "string",
                  "description": "Key ID"
                }
              },
              "required": [
                "kid"
              ],
              "description": "Input arguments for {@link IKeyManager.keyManagerDeleteKey | keyManagerDeleteKey}"
            },
            "IKeyManagerEncryptJWEArgs": {
              "type": "object",
              "properties": {
                "kid": {
                  "type": "string",
                  "description": "Key ID to use for encryption"
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "kid": {
                      "type": "string",
                      "description": "Key ID"
                    },
                    "type": {
                      "$ref": "#/components/schemas/TKeyType",
                      "description": "Key type"
                    },
                    "publicKeyHex": {
                      "type": "string",
                      "description": "Public key"
                    },
                    "privateKeyHex": {
                      "type": "string",
                      "description": "Optional. Private key"
                    },
                    "meta": {
                      "anyOf": [
                        {
                          "type": "object"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "Optional. Key metadata. Can be used to store auth data to access remote kms"
                    }
                  },
                  "required": [
                    "kid",
                    "type",
                    "publicKeyHex"
                  ],
                  "description": "Recipient key object"
                },
                "data": {
                  "type": "string",
                  "description": "Data to encrypt"
                }
              },
              "required": [
                "kid",
                "to",
                "data"
              ],
              "description": "Input arguments for {@link IKeyManager.keyManagerEncryptJWE | keyManagerEncryptJWE}"
            },
            "IKeyManagerGetKeyArgs": {
              "type": "object",
              "properties": {
                "kid": {
                  "type": "string",
                  "description": "Key ID"
                }
              },
              "required": [
                "kid"
              ],
              "description": "Input arguments for {@link IKeyManager.keyManagerGetKey | keyManagerGetKey}"
            },
            "IKeyManagerSignEthTXArgs": {
              "type": "object",
              "properties": {
                "kid": {
                  "type": "string",
                  "description": "Key ID"
                },
                "transaction": {
                  "type": "object",
                  "description": "Ethereum transaction object"
                }
              },
              "required": [
                "kid",
                "transaction"
              ],
              "description": "Input arguments for {@link IKeyManager.keyManagerSignEthTX | keyManagerSignEthTX}"
            },
            "IKeyManagerSignJWTArgs": {
              "type": "object",
              "properties": {
                "kid": {
                  "type": "string",
                  "description": "Key ID"
                },
                "data": {
                  "type": "string",
                  "description": "Data to sign"
                }
              },
              "required": [
                "kid",
                "data"
              ],
              "description": "Input arguments for {@link IKeyManager.keyManagerSignJWT | keyManagerSignJWT}"
            },
            "EcdsaSignature": {
              "type": "object",
              "properties": {
                "r": {
                  "type": "string"
                },
                "s": {
                  "type": "string"
                },
                "recoveryParam": {
                  "type": "number",
                  "const": 1
                }
              },
              "required": [
                "r",
                "s",
                "recoveryParam"
              ]
            }
          },
          "methods": {
            "keyManagerCreateKey": {
              "description": "Creates and returns a new key",
              "arguments": {
                "$ref": "#/components/schemas/IKeyManagerCreateKeyArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/IKey"
              }
            },
            "keyManagerDecryptJWE": {
              "description": "Decrypts data",
              "arguments": {
                "$ref": "#/components/schemas/IKeyManagerDecryptJWEArgs"
              },
              "returnType": {
                "type": "string"
              }
            },
            "keyManagerDeleteKey": {
              "description": "Deletes a key",
              "arguments": {
                "$ref": "#/components/schemas/IKeyManagerDeleteKeyArgs"
              },
              "returnType": {
                "type": "boolean"
              }
            },
            "keyManagerEncryptJWE": {
              "description": "Encrypts data",
              "arguments": {
                "$ref": "#/components/schemas/IKeyManagerEncryptJWEArgs"
              },
              "returnType": {
                "type": "string"
              }
            },
            "keyManagerGetKey": {
              "description": "Returns an existing key",
              "arguments": {
                "$ref": "#/components/schemas/IKeyManagerGetKeyArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/IKey"
              }
            },
            "keyManagerGetKeyManagementSystems": {
              "description": "Lists available key management systems",
              "arguments": {
                "type": "object"
              },
              "returnType": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "keyManagerImportKey": {
              "description": "Imports a created key",
              "arguments": {
                "$ref": "#/components/schemas/IKey"
              },
              "returnType": {
                "type": "boolean"
              }
            },
            "keyManagerSignEthTX": {
              "description": "Signs Ethereum transaction",
              "arguments": {
                "$ref": "#/components/schemas/IKeyManagerSignEthTXArgs"
              },
              "returnType": {
                "type": "string"
              }
            },
            "keyManagerSignJWT": {
              "description": "Signs JWT",
              "arguments": {
                "$ref": "#/components/schemas/IKeyManagerSignJWTArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/EcdsaSignature"
              }
            }
          }
        }
      },
      "IIdentityManager": {
        "components": {
          "schemas": {
            "IIdentityManagerAddKeyArgs": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "DID"
                },
                "key": {
                  "$ref": "#/components/schemas/IKey",
                  "description": "Key object"
                },
                "options": {
                  "type": "object",
                  "description": "Optional. Identity provider specific options"
                }
              },
              "required": [
                "did",
                "key"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerAddKey | identityManagerAddKey}"
            },
            "IKey": {
              "type": "object",
              "properties": {
                "kid": {
                  "type": "string",
                  "description": "Key ID"
                },
                "kms": {
                  "type": "string",
                  "description": "Key Management System"
                },
                "type": {
                  "$ref": "#/components/schemas/TKeyType",
                  "description": "Key type"
                },
                "publicKeyHex": {
                  "type": "string",
                  "description": "Public key"
                },
                "privateKeyHex": {
                  "type": "string",
                  "description": "Optional. Private key"
                },
                "meta": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Optional. Key metadata. Can be used to store auth data to access remote kms"
                }
              },
              "required": [
                "kid",
                "kms",
                "type",
                "publicKeyHex"
              ],
              "description": "Cryptographic key"
            },
            "TKeyType": {
              "type": "string",
              "enum": [
                "Ed25519",
                "Secp256k1"
              ],
              "description": "Cryptographic key type"
            },
            "IIdentityManagerAddServiceArgs": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "DID"
                },
                "service": {
                  "$ref": "#/components/schemas/IService",
                  "description": "Service object"
                },
                "options": {
                  "type": "object",
                  "description": "Optional. Identity provider specific options"
                }
              },
              "required": [
                "did",
                "service"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerAddService | identityManagerAddService}"
            },
            "IService": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID"
                },
                "type": {
                  "type": "string",
                  "description": "Service type"
                },
                "serviceEndpoint": {
                  "type": "string",
                  "description": "Endpoint URL"
                },
                "description": {
                  "type": "string",
                  "description": "Optional. Description"
                }
              },
              "required": [
                "id",
                "type",
                "serviceEndpoint"
              ],
              "description": "Identity service"
            },
            "IIdentityManagerCreateIdentityArgs": {
              "type": "object",
              "properties": {
                "alias": {
                  "type": "string",
                  "description": "Optional. Identity alias. Can be used to reference an object in an external system"
                },
                "provider": {
                  "type": "string",
                  "description": "Optional. Identity provider"
                },
                "kms": {
                  "type": "string",
                  "description": "Optional. Key Management System"
                },
                "options": {
                  "type": "object",
                  "description": "Optional. Identity provider specific options"
                }
              },
              "description": "Input arguments for {@link IIdentityManager.identityManagerCreateIdentity | identityManagerCreateIdentity}"
            },
            "IIdentity": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "Decentralized identifier"
                },
                "alias": {
                  "type": "string",
                  "description": "Optional. Identity alias. Can be used to reference an object in an external system"
                },
                "provider": {
                  "type": "string",
                  "description": "Identity provider name"
                },
                "controllerKeyId": {
                  "type": "string",
                  "description": "Controller key id"
                },
                "keys": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IKey"
                  },
                  "description": "Array of managed keys"
                },
                "services": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IService"
                  },
                  "description": "Array of services"
                }
              },
              "required": [
                "did",
                "provider",
                "keys",
                "services"
              ],
              "description": "Identity interface"
            },
            "IIdentityManagerDeleteIdentityArgs": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "DID"
                }
              },
              "required": [
                "did"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerDeleteIdentity | identityManagerDeleteIdentity}"
            },
            "IIdentityManagerGetIdentitiesArgs": {
              "type": "object",
              "properties": {
                "alias": {
                  "type": "string",
                  "description": "Optional. Alias"
                },
                "provider": {
                  "type": "string",
                  "description": "Optional. Provider"
                }
              },
              "description": "Input arguments for {@link IIdentityManager.identityManagerGetIdentities | identityManagerGetIdentities}"
            },
            "IIdentityManagerGetIdentityArgs": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "DID"
                }
              },
              "required": [
                "did"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerGetIdentity | identityManagerGetIdentity}"
            },
            "IIdentityManagerGetIdentityByAliasArgs": {
              "type": "object",
              "properties": {
                "alias": {
                  "type": "string",
                  "description": "Alias"
                },
                "provider": {
                  "type": "string",
                  "description": "Optional provider"
                }
              },
              "required": [
                "alias"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerGetIdentityByAlias | identityManagerGetIdentityByAlias}"
            },
            "IIdentityManagerGetOrCreateIdentityArgs": {
              "type": "object",
              "properties": {
                "alias": {
                  "type": "string",
                  "description": "Identity alias. Can be used to reference an object in an external system"
                },
                "provider": {
                  "type": "string",
                  "description": "Optional. Identity provider"
                },
                "kms": {
                  "type": "string",
                  "description": "Optional. Key Management System"
                },
                "options": {
                  "type": "object",
                  "description": "Optional. Identity provider specific options"
                }
              },
              "required": [
                "alias"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerGetOrCreateIdentity | identityManagerGetOrCreateIdentity}"
            },
            "IIdentityManagerRemoveKeyArgs": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "DID"
                },
                "kid": {
                  "type": "string",
                  "description": "Key ID"
                },
                "options": {
                  "type": "object",
                  "description": "Optional. Identity provider specific options"
                }
              },
              "required": [
                "did",
                "kid"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerRemoveKey | identityManagerRemoveKey}"
            },
            "IIdentityManagerRemoveServiceArgs": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "DID"
                },
                "id": {
                  "type": "string",
                  "description": "Service ID"
                },
                "options": {
                  "type": "object",
                  "description": "Optional. Identity provider specific options"
                }
              },
              "required": [
                "did",
                "id"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerRemoveService | identityManagerRemoveService}"
            },
            "IIdentityManagerSetAliasArgs": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "Required. DID"
                },
                "alias": {
                  "type": "string",
                  "description": "Required. Identity alias"
                }
              },
              "required": [
                "did",
                "alias"
              ],
              "description": "Input arguments for {@link IIdentityManager.identityManagerSetAlias | identityManagerSetAlias}"
            }
          },
          "methods": {
            "identityManagerAddKey": {
              "description": "Adds a key to a DID Document",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerAddKeyArgs"
              },
              "returnType": {
                "type": "object"
              }
            },
            "identityManagerAddService": {
              "description": "Adds a service to a DID Document",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerAddServiceArgs"
              },
              "returnType": {
                "type": "object"
              }
            },
            "identityManagerCreateIdentity": {
              "description": "Creates and returns a new identity",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerCreateIdentityArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/IIdentity"
              }
            },
            "identityManagerDeleteIdentity": {
              "description": "Deletes identity",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerDeleteIdentityArgs"
              },
              "returnType": {
                "type": "boolean"
              }
            },
            "identityManagerGetIdentities": {
              "description": "Returns a list of managed identities",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerGetIdentitiesArgs"
              },
              "returnType": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IIdentity"
                }
              }
            },
            "identityManagerGetIdentity": {
              "description": "Returns a specific identity",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerGetIdentityArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/IIdentity"
              }
            },
            "identityManagerGetIdentityByAlias": {
              "description": "Returns a specific identity by alias",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerGetIdentityByAliasArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/IIdentity"
              }
            },
            "identityManagerGetOrCreateIdentity": {
              "description": "Returns an existing identity or creates a new one for a specific alias",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerGetOrCreateIdentityArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/IIdentity"
              }
            },
            "identityManagerGetProviders": {
              "description": "Returns a list of available identity providers",
              "arguments": {
                "type": "object"
              },
              "returnType": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "identityManagerImportIdentity": {
              "description": "Imports identity",
              "arguments": {
                "$ref": "#/components/schemas/IIdentity"
              },
              "returnType": {
                "$ref": "#/components/schemas/IIdentity"
              }
            },
            "identityManagerRemoveKey": {
              "description": "Removes a key from a DID Document",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerRemoveKeyArgs"
              },
              "returnType": {
                "type": "object"
              }
            },
            "identityManagerRemoveService": {
              "description": "Removes a service from a DID Document",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerRemoveServiceArgs"
              },
              "returnType": {
                "type": "object"
              }
            },
            "identityManagerSetAlias": {
              "description": "Sets identity alias",
              "arguments": {
                "$ref": "#/components/schemas/IIdentityManagerSetAliasArgs"
              },
              "returnType": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "IDataStore": {
        "components": {
          "schemas": {
            "IDataStoreGetMessageArgs": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Required. Message ID"
                }
              },
              "required": [
                "id"
              ],
              "description": "Input arguments for {@link IDataStore.dataStoreGetMessage | dataStoreGetMessage}"
            },
            "IMessage": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique message ID"
                },
                "type": {
                  "type": "string",
                  "description": "Message type"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Optional. Creation date (ISO 8601)"
                },
                "expiresAt": {
                  "type": "string",
                  "description": "Optional. Expiration date (ISO 8601)"
                },
                "threadId": {
                  "type": "string",
                  "description": "Optional. Thread ID"
                },
                "raw": {
                  "type": "string",
                  "description": "Optional. Original message raw data"
                },
                "data": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Optional. Parsed data"
                },
                "replyTo": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. List of DIDs to reply to"
                },
                "replyUrl": {
                  "type": "string",
                  "description": "Optional. URL to post a reply message to"
                },
                "from": {
                  "type": "string",
                  "description": "Optional. Sender DID"
                },
                "to": {
                  "type": "string",
                  "description": "Optional. Recipient DID"
                },
                "metaData": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IMetaData"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Optional. Array of message metadata"
                },
                "credentials": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VerifiableCredential"
                  },
                  "description": "Optional. Array of attached verifiable credentials"
                },
                "presentations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VerifiablePresentation"
                  },
                  "description": "Optional. Array of attached verifiable presentations"
                }
              },
              "required": [
                "id",
                "type"
              ],
              "description": "DIDComm message"
            },
            "IMetaData": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type"
                },
                "value": {
                  "type": "string",
                  "description": "Optional. Value"
                }
              },
              "required": [
                "type"
              ],
              "description": "Message meta data"
            },
            "VerifiableCredential": {
              "type": "object",
              "properties": {
                "@context": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "issuer": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "issuanceDate": {
                  "type": "string"
                },
                "expirationDate": {
                  "type": "string"
                },
                "credentialSubject": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "credentialStatus": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "proof": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "@context",
                "type",
                "issuer",
                "issuanceDate",
                "credentialSubject",
                "proof"
              ],
              "description": "Verifiable Credential {@link https://github.com/decentralized-identity/did-jwt-vc}"
            },
            "VerifiablePresentation": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "holder": {
                  "type": "string"
                },
                "issuanceDate": {
                  "type": "string"
                },
                "expirationDate": {
                  "type": "string"
                },
                "@context": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verifier": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verifiableCredential": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VerifiableCredential"
                  }
                },
                "proof": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "holder",
                "@context",
                "type",
                "verifier",
                "verifiableCredential",
                "proof"
              ],
              "description": "Verifiable Presentation {@link https://github.com/decentralized-identity/did-jwt-vc}"
            },
            "IDataStoreGetVerifiableCredentialArgs": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string",
                  "description": "Required. VerifiableCredential hash"
                }
              },
              "required": [
                "hash"
              ],
              "description": "Input arguments for {@link IDataStore.dataStoreGetVerifiableCredential | dataStoreGetVerifiableCredential}"
            },
            "IDataStoreGetVerifiablePresentationArgs": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string",
                  "description": "Required. VerifiablePresentation hash"
                }
              },
              "required": [
                "hash"
              ],
              "description": "Input arguments for {@link IDataStore.dataStoreGetVerifiablePresentation | dataStoreGetVerifiablePresentation}"
            },
            "IDataStoreSaveMessageArgs": {
              "type": "object",
              "properties": {
                "message": {
                  "$ref": "#/components/schemas/IMessage",
                  "description": "Required. Message"
                }
              },
              "required": [
                "message"
              ],
              "description": "Input arguments for {@link IDataStore.dataStoreSaveMessage | dataStoreSaveMessage}"
            },
            "IDataStoreSaveVerifiableCredentialArgs": {
              "type": "object",
              "properties": {
                "verifiableCredential": {
                  "$ref": "#/components/schemas/VerifiableCredential",
                  "description": "Required. VerifiableCredential"
                }
              },
              "required": [
                "verifiableCredential"
              ],
              "description": "Input arguments for {@link IDataStore.dataStoreSaveVerifiableCredential | dataStoreSaveVerifiableCredential}"
            },
            "IDataStoreSaveVerifiablePresentationArgs": {
              "type": "object",
              "properties": {
                "verifiablePresentation": {
                  "$ref": "#/components/schemas/VerifiablePresentation",
                  "description": "Required. VerifiablePresentation"
                }
              },
              "required": [
                "verifiablePresentation"
              ],
              "description": "Input arguments for {@link IDataStore.dataStoreSaveVerifiablePresentation | dataStoreSaveVerifiablePresentation}"
            }
          },
          "methods": {
            "dataStoreGetMessage": {
              "description": "Gets message from the data store",
              "arguments": {
                "$ref": "#/components/schemas/IDataStoreGetMessageArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/IMessage"
              }
            },
            "dataStoreGetVerifiableCredential": {
              "description": "Gets verifiable credential from the data store",
              "arguments": {
                "$ref": "#/components/schemas/IDataStoreGetVerifiableCredentialArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/VerifiableCredential"
              }
            },
            "dataStoreGetVerifiablePresentation": {
              "description": "Gets verifiable presentation from the data store",
              "arguments": {
                "$ref": "#/components/schemas/IDataStoreGetVerifiablePresentationArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/VerifiablePresentation"
              }
            },
            "dataStoreSaveMessage": {
              "description": "Saves message to the data store",
              "arguments": {
                "$ref": "#/components/schemas/IDataStoreSaveMessageArgs"
              },
              "returnType": {
                "type": "string"
              }
            },
            "dataStoreSaveVerifiableCredential": {
              "description": "Saves verifiable credential to the data store",
              "arguments": {
                "$ref": "#/components/schemas/IDataStoreSaveVerifiableCredentialArgs"
              },
              "returnType": {
                "type": "string"
              }
            },
            "dataStoreSaveVerifiablePresentation": {
              "description": "Saves verifiable presentation to the data store",
              "arguments": {
                "$ref": "#/components/schemas/IDataStoreSaveVerifiablePresentationArgs"
              },
              "returnType": {
                "type": "string"
              }
            }
          }
        }
      },
      "IMessageHandler": {
        "components": {
          "schemas": {
            "IHandleMessageArgs": {
              "type": "object",
              "properties": {
                "raw": {
                  "type": "string",
                  "description": "Raw message data"
                },
                "metaData": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IMetaData"
                  },
                  "description": "Optional. Message meta data"
                },
                "save": {
                  "type": "boolean",
                  "description": "Optional. If set to `true`, the message will be saved using {@link IDataStore.dataStoreSaveMessage | dataStoreSaveMessage}"
                }
              },
              "required": [
                "raw"
              ],
              "description": "Input arguments for {@link IMessageHandler.handleMessage | handleMessage}"
            },
            "IMetaData": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type"
                },
                "value": {
                  "type": "string",
                  "description": "Optional. Value"
                }
              },
              "required": [
                "type"
              ],
              "description": "Message meta data"
            },
            "IMessage": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique message ID"
                },
                "type": {
                  "type": "string",
                  "description": "Message type"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Optional. Creation date (ISO 8601)"
                },
                "expiresAt": {
                  "type": "string",
                  "description": "Optional. Expiration date (ISO 8601)"
                },
                "threadId": {
                  "type": "string",
                  "description": "Optional. Thread ID"
                },
                "raw": {
                  "type": "string",
                  "description": "Optional. Original message raw data"
                },
                "data": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Optional. Parsed data"
                },
                "replyTo": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. List of DIDs to reply to"
                },
                "replyUrl": {
                  "type": "string",
                  "description": "Optional. URL to post a reply message to"
                },
                "from": {
                  "type": "string",
                  "description": "Optional. Sender DID"
                },
                "to": {
                  "type": "string",
                  "description": "Optional. Recipient DID"
                },
                "metaData": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IMetaData"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Optional. Array of message metadata"
                },
                "credentials": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VerifiableCredential"
                  },
                  "description": "Optional. Array of attached verifiable credentials"
                },
                "presentations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VerifiablePresentation"
                  },
                  "description": "Optional. Array of attached verifiable presentations"
                }
              },
              "required": [
                "id",
                "type"
              ],
              "description": "DIDComm message"
            },
            "VerifiableCredential": {
              "type": "object",
              "properties": {
                "@context": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "issuer": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                "issuanceDate": {
                  "type": "string"
                },
                "expirationDate": {
                  "type": "string"
                },
                "credentialSubject": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "credentialStatus": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "proof": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "@context",
                "type",
                "issuer",
                "issuanceDate",
                "credentialSubject",
                "proof"
              ],
              "description": "Verifiable Credential {@link https://github.com/decentralized-identity/did-jwt-vc}"
            },
            "VerifiablePresentation": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "holder": {
                  "type": "string"
                },
                "issuanceDate": {
                  "type": "string"
                },
                "expirationDate": {
                  "type": "string"
                },
                "@context": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "type": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verifier": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verifiableCredential": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VerifiableCredential"
                  }
                },
                "proof": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "holder",
                "@context",
                "type",
                "verifier",
                "verifiableCredential",
                "proof"
              ],
              "description": "Verifiable Presentation {@link https://github.com/decentralized-identity/did-jwt-vc}"
            }
          },
          "methods": {
            "handleMessage": {
              "description": "Parses and optionally saves a message",
              "arguments": {
                "$ref": "#/components/schemas/IHandleMessageArgs"
              },
              "returnType": {
                "$ref": "#/components/schemas/IMessage"
              }
            }
          }
        }
      }
    }
  },
  "issuer": {
    "id": "did:ethr:rinkeby:0x96bbef772fcc4f9cf50c523b559bf6c3a9efc556"
  },
  "type": [
    "VerifiableCredential",
    "AgentPluginSchema"
  ],
  "@context": [
    "https://www.w3.org/2018/credentials/v1"
  ],
  "issuanceDate": "2020-11-23T11:09:43.000Z",
  "proof": {
    "type": "JwtProof2020",
    "jwt": "eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ..04LUuhNvS61XsOiL5XTXzinKE9oj4iu25eCg7Ry03aKqm5SCccRZjYvSkWNXp8UwGVX-cZjFMvgJryGjJm1Yrw"
  }
}